<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo安装主题</title>
      <link href="/2020/07/11/hexo-themes/"/>
      <url>/2020/07/11/hexo-themes/</url>
      
        <content type="html"><![CDATA[<p>Hexo主题官网：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题之&quot;matery&quot;</title>
      <link href="/2020/07/11/hexo-themes-matey/"/>
      <url>/2020/07/11/hexo-themes-matey/</url>
      
        <content type="html"><![CDATA[<p>Matery主题预览：<a href="https://blinkfox.github.io/" target="_blank" rel="noopener">https://blinkfox.github.io/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下的HEXO静态博客搭建</title>
      <link href="/2020/07/10/WnewHexo/"/>
      <url>/2020/07/10/WnewHexo/</url>
      
        <content type="html"><![CDATA[<p>Windows10平台下Hexo静态博客的大致搭建流程，从环境准备到搭建成功预览，包括部署到GitHub以及可能出现的错误。</p><h2 id="一、配置nodejs环境"><a href="#一、配置nodejs环境" class="headerlink" title="一、配置nodejs环境"></a>一、配置nodejs环境</h2><h3 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1.下载安装"></a>1.下载安装</h3><p>官网下载地址：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a><br>安装完成后cmd输入<code>node -v</code>可查看版本号说明安装成功</p><h3 id="2-修改npm的模块目录和缓存目录"><a href="#2-修改npm的模块目录和缓存目录" class="headerlink" title="2.修改npm的模块目录和缓存目录"></a>2.修改npm的模块目录和缓存目录</h3><p>Npm的缓存文件和模块默认是存储在C盘，将其模块目录和缓存目录设置到nodejs文件夹下方便以后操作，nodejs默认安装目录为<code>C:\Program Files\nodejs</code><br>在nodejs文件夹下，创建两个为文件夹<code>node_global</code>和<code>node_cecal</code><br>使用下面命令将npm的全局模块目录和缓存目录配置到我们刚才创建的那两个目录</p><ul><li><strong>npm config set prefix “node_global文件夹的路径”</strong></li><li><strong>npm config set cache “node_cache文件夹的路径”</strong><br>控制面板-系统和安全-系统高级系统设置—环境变量</li><li>新增系统变量<code>NODE_PATH</code>，变量值填写nodejs目录下的<code>node_modules</code>文件夹路径</li><li>系统Path变量添加之前创建的<code>node_global</code>目录<br>cmd输入<code>node</code>再输入<code>require</code>显示如下说明配置完成<br><img src="https://s1.ax1x.com/2020/07/10/UM2tYT.png" alt=""></li></ul><h2 id="二、安装Git"><a href="#二、安装Git" class="headerlink" title="二、安装Git"></a>二、安装Git</h2><h3 id="1-下载安装-1"><a href="#1-下载安装-1" class="headerlink" title="1.下载安装"></a>1.下载安装</h3><p>官网下载地址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a><br>自行下载最好准备科学工具，推荐在官网查看最新的版本后前往百度搜索“Git下载”<br>详细安装过程可查看：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html" target="_blank" rel="noopener"点击转跳"">学为所用的详细Git安装过程</a></p><h2 id="三、准备GitHub仓库"><a href="#三、准备GitHub仓库" class="headerlink" title="三、准备GitHub仓库"></a>三、准备GitHub仓库</h2><h3 id="1-注册GitHub账号"><a href="#1-注册GitHub账号" class="headerlink" title="1.注册GitHub账号"></a>1.注册GitHub账号</h3><p>官网链接：<a href="https://github.com" target="_blank" rel="noopener" title="点击转跳">GitHub官网</a></p><h3 id="2-新建仓库"><a href="#2-新建仓库" class="headerlink" title="2.新建仓库"></a>2.新建仓库</h3><p>新建的仓库名字必须符合要求：用户名.github.io<br><img src="https://s1.ax1x.com/2020/07/10/UMMsIO.png" alt=""></p><h3 id="3-生成SSH-Key密钥并连接GitHub"><a href="#3-生成SSH-Key密钥并连接GitHub" class="headerlink" title="3.生成SSH Key密钥并连接GitHub"></a>3.生成SSH Key密钥并连接GitHub</h3><p><strong>查看本机是否存在SSH密钥</strong><br>打开之前安装的 Git Bash 运行如下命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> ~/.ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查你本机用户home目录下是否存在.ssh目录，如果不存在目录则进行下一步，否则直接进入第三步操作。<br><strong>创建新的SSH密钥</strong><br>输入如下命令：</p><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"你的github邮箱"</span><span class="token comment" spellcheck="true">#回车后将提示如下内容：</span>Generating public/private rsa key pair.Enter <span class="token function">file</span> <span class="token keyword">in</span> <span class="token function">which</span> to save the key <span class="token punctuation">(</span>/c/Users/you/.ssh/id_rsa<span class="token punctuation">)</span>: <span class="token punctuation">[</span>Press enter<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#回车确认路径后输入密码和再次确认密码：</span>Enter passphrase <span class="token punctuation">(</span>empty <span class="token keyword">for</span> no passphrase<span class="token punctuation">)</span>: <span class="token punctuation">[</span>Type a passphrase<span class="token punctuation">]</span>Enter same passphrase again: <span class="token punctuation">[</span>Type passphrase again<span class="token punctuation">]</span><span class="token comment" spellcheck="true">#输入完成之后，屏幕会显示如下信息：</span>Your identification has been saved <span class="token keyword">in</span> /c/Users/you/.ssh/id_rsa.Your public key has been saved <span class="token keyword">in</span> /c/Users/you/.ssh/id_rsa.pub.The key fingerprint is:一串两位字符+你的邮箱<span class="token comment" spellcheck="true">#成功生成密钥后输入以下命令将密钥拷贝到系统剪贴板</span>clip <span class="token operator">&lt;</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>在GitHub账户中添加公钥</strong><br>点击GitHub主页右上角的头像选择设置<br><img src="https://s1.ax1x.com/2020/07/11/UQUeyT.png" alt=""><br>左侧选择SSH and GPG keys并新建SSH KEY<br><img src="https://s1.ax1x.com/2020/07/11/UQUO74.png" alt=""><br>输入标题并粘贴之前负责的密匙点击添加<br><img src="https://s1.ax1x.com/2020/07/11/UQd3M6.png" alt=""></p><p><strong>测试连接</strong><br>输入如下命令测试连接，可能会要求输入之前设置的密码</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com<span class="token comment" spellcheck="true">#如果出现如下警告直接Yes回车</span>The authenticity of host <span class="token string">'github.com (000.000.000.000)'</span> can't be established.RSA key fingerprint is 00:00:00:00:00:00:00:00:00:??:??:4d:eb:df:a6:48.Are you sure you want to <span class="token keyword">continue</span> connecting <span class="token punctuation">(</span>yes/no<span class="token punctuation">)</span>?<span class="token comment" spellcheck="true">#出现如下信息则为连接成功</span>Hi 你的github用户名<span class="token operator">!</span> You’ve successfully authenticated, but GitHub does not provide shell access.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、安装HEXO博客"><a href="#四、安装HEXO博客" class="headerlink" title="四、安装HEXO博客"></a>四、安装HEXO博客</h2><p>非科学网络环境后续的步骤下载很慢的解决办法参考：<a href="https://www.cnblogs.com/luyuandatabase/p/12145707.html" target="_blank" rel="noopener" title="点击转跳">水火和牛npm使用国内淘宝镜像的方法</a><br>部署工具hexo-script-win的参考文档：<a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/zhun-bei-gong-ju" target="_blank" rel="noopener">hexo-script</a></p><h3 id="1-下载hexo-script-win的install-sh工具"><a href="#1-下载hexo-script-win的install-sh工具" class="headerlink" title="1.下载hexo-script-win的install.sh工具"></a>1.下载hexo-script-win的<code>install.sh</code>工具</h3><p>下载地址：<a href="https://github.com/kjhuanhao/hexo-script/releases" target="_blank" rel="noopener">releases</a><br>储存到要存放博客的目录A，该工具会在A目录下生成hexoblog文件夹存放博客文件。</p><h3 id="2-一键安装HEXO博客"><a href="#2-一键安装HEXO博客" class="headerlink" title="2.一键安装HEXO博客"></a>2.一键安装HEXO博客</h3><p>在存放<code>install.sh</code>的目录右键“Git Bash Here”，输入如下命令：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">source</span> install.sh hexo_win<span class="token comment" spellcheck="true">#回车后如果提示一串红字可忽略，大致意思是hexoblog目录不存在会给你创建</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当您看到出现<code>Please run hexo s to check it out!</code>的提示,证明您已经安装成功,此时你可以输入如下命令然后查看你的博客</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> hexobloghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行后会出现一段地址：<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>   ，在浏览器输入该地址即可本地访问你的Hexo博客了，效果如下：<br><img src="https://s1.ax1x.com/2020/07/11/UQrCjI.png" alt=""></p><h2 id="五、部署Hexo博客到GitHub仓库"><a href="#五、部署Hexo博客到GitHub仓库" class="headerlink" title="五、部署Hexo博客到GitHub仓库"></a>五、部署Hexo博客到GitHub仓库</h2><p>可以参考hexo-script部署工具的<code>up.sh</code>工具一键部署或者使用<code>hexo d</code>指令部署</p><h3 id="1-编辑配置文件"><a href="#1-编辑配置文件" class="headerlink" title="1.编辑配置文件"></a>1.编辑配置文件</h3><p>打开hexoblog下的<code>_config.yml</code>文件，推荐使用VScode或HBuilderX打开<br>找到deploy,它一般在最后一行,按照以下的格式修改即可</p><pre class="line-numbers language-cs"><code class="language-cs">deploy:  type: git  repo: 这里填你的仓库地址,建议使用SSH地址。如：https://github.com/用户名/用户名.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-安装上传插件"><a href="#2-安装上传插件" class="headerlink" title="2.安装上传插件"></a>2.安装上传插件</h3><p>在<code>hexoblog根目录</code>打开Git Bash输入如下命令：</p><pre class="line-numbers language-bash"><code class="language-bash">国内镜像：cnpm <span class="token function">install</span> hexo-deployer-git --save非国内：npm <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-部署上传"><a href="#3-部署上传" class="headerlink" title="3.部署上传"></a>3.部署上传</h3><p>Hexo的常用命令:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#在hexoblog根目录：</span>hexo clean <span class="token comment" spellcheck="true">#清除静态文件</span>hexo g <span class="token comment" spellcheck="true">#生成静态文件</span>hexo server / hexo s <span class="token comment" spellcheck="true">#本地预览静态文件</span>hexo d <span class="token comment" spellcheck="true">#将静态文件部署上传</span><span class="token comment" spellcheck="true">#可以使用如下命令部署或预览</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo d <span class="token comment" spellcheck="true">#上传</span>hexo clean <span class="token operator">&amp;&amp;</span> hexo g <span class="token operator">&amp;&amp;</span> hexo s <span class="token comment" spellcheck="true">#本地</span><span class="token comment" spellcheck="true">#出现如下提示则为上传成功：</span>INFO  Deploy done: <span class="token function">git</span><span class="token comment" spellcheck="true">#如果报错了not found git的错误证明上传插件没有安装成功，尝试重新安装上传插件或使用up.sh上传</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>浏览器输入仓库地址查看部署情况：https://用户名.github.io</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
